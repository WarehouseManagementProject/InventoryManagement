import numpy as np
from warehouse import Warehouse, Item, Rack, build_sample_warehouse, item_directory
import random
class SimulatedAnn():
    def __init__(self, warehouse: Warehouse,items:list[Item]):
        self.warehouse = warehouse
        self.listOfItems = items
        self.unPlacedItems = len(self.listOfItems)
        self.currEntropy = None
    
    def calculateEntropy(self,item, rack, position, zone, aisle):

        # category
        #sub category
        #retrieval urgency
        #weight
        #unplaced items
        return 0
    
    def train(self, initalTemperature=10000, decay=0.999):
        for item in self.listOfItems:
            isItemPlaced = False
            while isItemPlaced==False:
                rack, position, zone, aisle = self.warehouse.add_item(item)
                if not rack:
                    continue
                entropy = self.calculateEntropy(item, rack, position, zone, aisle)




    



def generateItems(num_items):
    generatedItems = []
    for i in range(num_items):
        category = random.choice(list(item_directory.keys()))
        sub_category = random.choice(list(item_directory[category].keys()))
        weight = random.uniform(0.1, 5.0)
        dimensions = (random.randint(1,3), random.randint(1,2), random.randint(1,2))
        product_name = f"Item_{i}"
        retrieval_urgency = random.randint(1, 5)
        item = Item(category, sub_category, weight, dimensions, product_name, retrieval_urgency)
        generatedItems.append(item)
    return generatedItems

items = generateItems(10)
for item in items:
    print(item.category)

